{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.0", "generated_at": "2025-10-30T21:31:36.357031Z", "invocation_id": "e65b370c-a8e0-4225-bf44-198a90e71f10", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-30T21:31:36.145189Z", "completed_at": "2025-10-30T21:31:36.151792Z"}, {"name": "execute", "started_at": "2025-10-30T21:31:36.152191Z", "completed_at": "2025-10-30T21:31:36.244518Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.11004400253295898, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.data_models.stg_orders", "compiled": true, "compiled_code": "-- data_models/models/staging/stg_orders.sql\n\n\n\nSELECT\n    -- 1. Identifier Renaming\n    id AS order_pk,\n    customer_id,\n    \n    -- 2. Cleaning and Standardization\n    TRIM(order_status) AS order_status, -- Remove accidental whitespace\n    \n    -- 3. Timestamp Standardization\n    order_timestamp,\n    \n    -- 4. Type Casting\n    CAST(total_paid AS NUMERIC(10, 2)) AS total_paid_amount,\n    \n    -- 5. Source Metadata\n    'postgres_raw' AS source_system\n    \nFROM\n    \"primary_app_db\".\"public\".\"raw_orders\"", "relation_name": "\"primary_app_db\".\"public_staging\".\"stg_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-30T21:31:36.148115Z", "completed_at": "2025-10-30T21:31:36.158200Z"}, {"name": "execute", "started_at": "2025-10-30T21:31:36.179205Z", "completed_at": "2025-10-30T21:31:36.243388Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.1080169677734375, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.data_models.stg_products", "compiled": true, "compiled_code": "-- data_models/models/staging/stg_products.sql\n\n-- Set the materialization as view for quick development/light queries\n\n\nSELECT\n    -- 1. Primary Key/Identifier Renaming\n    id AS product_pk, -- 'pk' for primary key in the source system (raw table)\n    \n    -- 2. Cleaning and Standardizing Identifiers\n    UPPER(product_sku) AS product_sku, -- Ensure SKUs are consistently uppercase\n    \n    -- 3. Core Attributes (Simple pass-through)\n    product_name,\n    category_id,\n    \n    -- 4. Type Casting/Formatting\n    CAST(unit_price AS NUMERIC(10, 2)) AS unit_price,\n    current_stock,\n    is_active,\n    \n    -- 5. Timestamp Standardization\n    created_timestamp,\n    \n    -- 6. Source Metadata (Useful for data lineage/debugging)\n    'postgres_raw' AS source_system\n    \nFROM\n    -- Reference the RAW table in the PostgreSQL database\n    \"primary_app_db\".\"public\".\"raw_products\"", "relation_name": "\"primary_app_db\".\"public_staging\".\"stg_products\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-30T21:31:36.139563Z", "completed_at": "2025-10-30T21:31:36.158465Z"}, {"name": "execute", "started_at": "2025-10-30T21:31:36.181440Z", "completed_at": "2025-10-30T21:31:36.245562Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11124873161315918, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.data_models.stg_order_items", "compiled": true, "compiled_code": "-- data_models/models/staging/stg_order_items.sql\n\n\n\nSELECT\n    -- 1. Identifier Renaming\n    id AS order_item_pk,\n    order_id AS order_pk,\n    product_id AS product_pk,\n\n    -- 2. Type Casting and Validation\n    quantity,\n    CAST(unit_price_at_sale AS NUMERIC(10, 2)) AS unit_price_at_sale,\n    \n    -- 3. Source Metadata\n    'postgres_raw' AS source_system\n    \nFROM\n    \"primary_app_db\".\"public\".\"raw_order_items\"", "relation_name": "\"primary_app_db\".\"public_staging\".\"stg_order_items\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-30T21:31:36.252894Z", "completed_at": "2025-10-30T21:31:36.257044Z"}, {"name": "execute", "started_at": "2025-10-30T21:31:36.257371Z", "completed_at": "2025-10-30T21:31:36.297584Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04584169387817383, "adapter_response": {"_message": "SELECT 0", "code": "SELECT", "rows_affected": 0}, "message": "SELECT 0", "failures": null, "unique_id": "model.data_models.dim_products", "compiled": true, "compiled_code": "-- data_models/models/marts/dim_products.sql\n\n-- Materialize as a table for fast read performance in Power BI\n\n\nSELECT\n    -- Final Unique Identifier for Power BI (Dimension Key)\n    product_pk, \n    \n    -- Core Product Attributes\n    product_sku,\n    product_name,\n    \n    -- Descriptive Attributes\n    CASE\n        WHEN category_id = 1 THEN 'Electronics'\n        WHEN category_id = 2 THEN 'Apparel'\n        ELSE 'Other' \n    END AS product_category_name, -- Logic to translate raw FK to a user-friendly name\n    \n    -- Price and Status\n    unit_price AS current_unit_price,\n    current_stock,\n    is_active,\n    \n    -- Metadata/History\n    created_timestamp\n    \nFROM\n    \"primary_app_db\".\"public_staging\".\"stg_products\"\n\n-- Optional: Add a unique constraint check to ensure dimension integrity\n-- You would typically add this to a 'schema.yml' file for testing", "relation_name": "\"primary_app_db\".\"public_analytics\".\"dim_products\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-30T21:31:36.301783Z", "completed_at": "2025-10-30T21:31:36.305948Z"}, {"name": "execute", "started_at": "2025-10-30T21:31:36.306278Z", "completed_at": "2025-10-30T21:31:36.340330Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03969860076904297, "adapter_response": {"_message": "SELECT 0", "code": "SELECT", "rows_affected": 0}, "message": "SELECT 0", "failures": null, "unique_id": "model.data_models.fact_sales", "compiled": true, "compiled_code": "-- data_models/models/marts/fact_sales.sql\n\n-- Materialize as a table for the best query performance in Power BI\n\n\nWITH items AS (\n    SELECT * FROM \"primary_app_db\".\"public_staging\".\"stg_order_items\" \n),\n\norders AS (\n    SELECT * FROM \"primary_app_db\".\"public_staging\".\"stg_orders\"\n),\n\nproducts AS (\n    -- Reference the clean dimension table to pull in descriptive data\n    SELECT \n        product_pk, \n        product_sku,\n        product_category_name -- Pulling the clean, categorized name from dim_products\n    FROM \n        \"primary_app_db\".\"public_analytics\".\"dim_products\"\n)\n\nSELECT\n    -- 1. Foreign Keys (To link to the Dimension Tables)\n    o.order_pk AS order_key,\n    o.customer_id AS customer_key, -- Assumes a dim_customers table for lookup\n    i.product_pk AS product_key,\n\n    -- 2. Date/Time Dimensions (For temporal slicing and dicing)\n    o.order_timestamp AS sales_timestamp,\n    CAST(o.order_timestamp AS DATE) AS sales_date, -- For easy date filtering\n\n    -- 3. Measures (The core business metrics to be aggregated)\n    i.quantity AS units_sold,\n    i.unit_price_at_sale,\n    (i.quantity * i.unit_price_at_sale) AS gross_revenue_amount,\n    \n    -- 4. Descriptive Attributes (Denormalized into the fact for reporting convenience)\n    p.product_sku,\n    p.product_category_name,\n\n    -- 5. Status and Lineage\n    o.order_status,\n    o.source_system AS source_system\n    \nFROM\n    items i\nINNER JOIN\n    orders o \n    ON i.order_pk = o.order_pk\nLEFT JOIN\n    products p\n    ON i.product_pk = p.product_pk\n\nWHERE\n    -- CRITICAL BUSINESS LOGIC: Ensure data integrity by only including transactions that are completed\n    o.order_status = 'Delivered' \n    -- Filter out any future-dated orders or garbage data\n    AND o.order_timestamp <= NOW()", "relation_name": "\"primary_app_db\".\"public_analytics\".\"fact_sales\"", "batch_results": null}], "elapsed_time": 0.3763999938964844, "args": {"defer": false, "exclude": [], "write_json": true, "log_format": "default", "macro_debugging": false, "require_nested_cumulative_type_params": false, "print": true, "favor_state": false, "log_level_file": "debug", "log_file_max_bytes": 10485760, "project_dir": "/usr/app/dbt_project", "profiles_dir": "/usr/app/dbt_project", "source_freshness_run_project_hooks": false, "invocation_command": "dbt run --target prod", "partial_parse_file_diff": true, "static_parser": true, "target": "prod", "vars": {}, "warn_error_options": {"include": [], "exclude": []}, "require_explicit_package_overrides_for_builtin_materializations": true, "send_anonymous_usage_stats": false, "indirect_selection": "eager", "partial_parse": true, "log_format_file": "debug", "version_check": true, "skip_nodes_if_on_run_start_fails": false, "empty": false, "printer_width": 80, "which": "run", "log_path": "/usr/app/dbt_project/logs", "introspect": true, "quiet": false, "show_resource_report": false, "state_modified_compare_more_unrendered_values": false, "use_colors_file": true, "strict_mode": false, "state_modified_compare_vars": false, "select": [], "require_batched_execution_for_custom_microbatch_strategy": false, "require_resource_names_without_spaces": false, "log_level": "info", "cache_selected_only": false, "require_yaml_configuration_for_mf_time_spines": false, "populate_cache": true, "use_colors": true}}